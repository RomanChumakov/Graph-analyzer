Первый коммит (сделано): Initial commit from Create React App.

    +инициализирует приложение

Второй коммит (сделано): Реализует базовый интерфейс, обработку входных данных и построение и вывод матриц смежности и инцидентности.

    +написать начальный интерфейс
    +написать обработку в JSON входного списка связности
    +написать компонент таблицы
    +вычислить и вывести матрицу смежности
    +вычислить и вывести матрицу инцидентности

Третий коммит (сделано): Удаляет пакет react-table. Добавляет поддержку кратных рёбер в матрицы.

    +удалить React-Table
    +добавить поддержку кратных рёбер в матрицы

Четвёртый коммит (сделано): Добавляет поддержку петель. Выносит проверку на ориентированность графа в хук. Выносит вычисление матриц и других результатов в отдельный модуль. Добавляет вычисление степеней и полустепеней вершин.

    +добавляет поддержку петель
    +вынести проверку на ориентированность графа в хук
    +реорганизовать структуру проекта
    +вынести вычисления матриц в отдельные функции
    +найти и вывести полустепени и степени вершин по столбцам и и строкам матрицы смежности
    +исправить ошибки в отображении матриц с петлями

Пятый коммит (сделано): Реализует проверки графов на кратность рёбер, наличие петель и висячие вершины. Добавляет вывод результатов этих проверок.

    +проверка с выводом на мультиграф (в мат. смеж. есть числа >1)
    +проверка с выводом на псевдограф (есть петли (числа !=0 на главной диагонали)) или нет
    +найти и вывести висячие вершины (где степень 1)

Шестой коммит (сделано): Реализует алгоритм вычисления матриц маршрутов и замкнутых маршрутов длины L. Добавляет соответствующий пользовательский интерфейс.

    +вычислить число маршрутов длины L из заданных вершин
        +сделать форму длины пути и вывода результата
        +написать алгоритм умножения матриц
        +написать сложение матриц
        +написать алгоритм поиска маршрутов
            +в графе есть путь, соединяющий 2 вершины (для орграфа нужно, чтобы соответствовало направление), если элемент в матрице с !=0 (с = матрица + матрица^2 + матрица^3 + ... + матрица^n-1)
	        +в нвершинном графе существует замкнутый маршрут (путь), проходящий через вершину тогда и только тогда, когда соответствуюий элемент в матрице !=0 ((с = матрица + матрица^2 + матрица^3 + ... + матрица^n))

Седьмой коммит (сделано): Добавляет визуализацию графа.

    нарисовать граф на svg (поискать, как я там делал на дискретке, есть ещё GraphWith)
        +найти и внедрить у себя библиотеку
        +написать функцию построения графа по введённым данным

Восьмой коммит (сделано): Добавляет исключения на некорректный ввод.

    Протестировать и добавить исключения на неправильный ввод.

Девятый коммит:

    сделать локализацию
    Посмотреть, как создавать репозиторий отсюда
